/* Script generated by Pawn Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>

new bool:g_PlayerRevoked[ 33 ] = false

public plugin_init()
{
	register_plugin("License Management", "1.2", "johnjg75")
	RegisterHam(Ham_Use, "func_vehicle", "PlayerUse", 0)
	register_concmd("amx_revoke","revoke",ADMIN_KICK,"<player> - Revokes a player's license")
	register_concmd("amx_unrevoke","unrevoke",ADMIN_KICK,"<player> - Renews a player's license")
}

public PlayerUse(ptr,ptd)
{
	if(g_PlayerRevoked[ ptd ])
	{
		set_hudmessage()
		show_hudmessage(ptd, "Sorry, you're license was revoked.")
		return HAM_SUPERCEDE
	}
	return HAM_IGNORED
}

public revoke(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1))
		return PLUGIN_HANDLED
	
	new playern[42]
	read_argv(1,playern,41)
	
	new playerid = cmd_target(id, playern, CMDTARGET_OBEY_IMMUNITY | CMDTARGET_ALLOW_SELF)
	if(!playerid)
		return PLUGIN_HANDLED
	
	new playerauth[40]
	get_user_authid(playerid,playerauth,39)
	new vaultauth[42]
	format(vaultauth,41,"RV%s",playerauth)
	if(vaultdata_exists(vaultauth))
	{
		client_print(id, print_console, "Player's license is already revoked.")
		return PLUGIN_HANDLED
	}
	set_vaultdata(vaultauth,"1")
	
	g_PlayerRevoked[ playerid ] = true
	
	client_print(id,print_console,"Player's license revoked.")
	client_print(playerid, print_chat, "The admin has revoked your license.")
	
	return PLUGIN_HANDLED
}

public unrevoke(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1))
		return PLUGIN_HANDLED
	
	new playern[42]
	read_argv(1,playern,41)
	
	new playerid = cmd_target(id, playern, CMDTARGET_OBEY_IMMUNITY | CMDTARGET_ALLOW_SELF)
	if(!playerid)
		return PLUGIN_HANDLED
	
	new playerauth[40]
	get_user_authid(playerid,playerauth,39)
	new vaultauth[42]
	format(vaultauth,41,"RV%s",playerauth)
	
	if(!vaultdata_exists(vaultauth))
	{
		client_print(id,print_console,"Player's license was never revoked.")
		return PLUGIN_HANDLED
	}
	else
	{
		remove_vaultdata(vaultauth)
		g_PlayerRevoked[ playerid ] = false
		client_print(id,print_console,"This player's license was unrevoked.")
		client_print(playerid, print_chat, "The admin has given you you're license back.")
		return PLUGIN_HANDLED
	}
	return PLUGIN_HANDLED
}

public client_authorized(id)
{
	new playerauth[40]
	get_user_authid(id,playerauth,39)
	new vaultauth[42]
	format(vaultauth,41,"RV%s",playerauth)
	g_PlayerRevoked[ id ] = vaultdata_exists(vaultauth)?true:false
	return PLUGIN_HANDLED
}
